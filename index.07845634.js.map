{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAa,SAAS,gBAAgB,CAAC,YACzC,EAAkB,KAChB,EAAiB,MAAM,IAAI,CAAC,CAAE,OAAQ,EAAW,MAAM,AAAC,EAAG,WAAM,MAAA,CAAA,C,GAEvE,EAAW,OAAO,CAAC,SAAC,CAAA,CAAS,CAA7B,EACE,EAAQ,gBAAgB,CAAC,QAAS,eAGjB,EACX,EACA,EALkC,OAGvB,EAHiC,EAK5C,EAAW,MAAM,IAAI,CAAC,CADtB,EAAY,SAAS,aAAa,CAAC,UACH,gBAAgB,CAAC,YAEnD,IAAoB,EACtB,CAAc,CAAC,EAAM,CAAG,CAAC,CAAc,CAAC,EAAM,CAE9C,CAAc,CAAC,EAAM,CAAG,CAAA,EAG1B,EAAS,IAAI,CAAC,SAAC,CAAA,CAAM,CAArB,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAC1C,EAAQ,EAAK,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAE1C,EAAY,CAAc,CAAC,EAAM,CAAG,EAAI,GAE9C,MAQF,CAAA,AAAI,AARiC,GAQxB,EACJ,AATc,EASR,aAAa,CATE,GAY1B,AAAU,IAZuB,EAgB5B,AAHQ,CAAA,WAAW,AAbL,EAaW,OAAO,CAAC,QAAS,MAAQ,CAAA,EAC1C,CAAA,WAAW,AAdE,EAcI,OAAO,CAAC,QAAS,MAAQ,CAAA,EAKpD,WAnBgB,GAmBI,WAnBG,EAQ9B,EAR8C,CAC9C,GAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAoB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,KACpB,EAAkB,E,EAtBpB,GA0CA,IAAM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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// #region sorting Table\nvar tableNames = document.querySelectorAll(\"thead th\");\nvar lastSortedIndex = null;\nvar sortDirections = Array.from({\n    length: tableNames.length\n}, function() {\n    return true;\n});\ntableNames.forEach(function(element, index) {\n    element.addEventListener(\"click\", function() {\n        return sortTable(index);\n    });\n});\nfunction sortTable(index) {\n    var _tableBody;\n    var tableBody = document.querySelector(\"tbody\");\n    var headRows = Array.from(tableBody.querySelectorAll(\"tr\"));\n    if (lastSortedIndex === index) sortDirections[index] = !sortDirections[index];\n    else sortDirections[index] = true;\n    headRows.sort(function(rowA, rowB) {\n        var cellA = rowA.cells[index].textContent.trim();\n        var cellB = rowB.cells[index].textContent.trim();\n        var direction = sortDirections[index] ? 1 : -1;\n        return compareValues(cellA, cellB, index) * direction;\n    });\n    (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(headRows));\n    lastSortedIndex = index;\n}\nfunction compareValues(cellA, cellB, index) {\n    if (index <= 2) return cellA.localeCompare(cellB);\n    if (index === 4) {\n        var valueA = parseFloat(cellA.replace(/[$,]/g, \"\")) || 0;\n        var valueB = parseFloat(cellB.replace(/[$,]/g, \"\")) || 0;\n        return valueA - valueB;\n    }\n    return parseFloat(cellA) - parseFloat(cellB);\n}\n// #endregion\n// #region selected Row\nvar rows = document.querySelectorAll(\"tbody tr\");\nvar activeRow = null;\nrows.forEach(function(row, index) {\n    row.addEventListener(\"click\", function() {\n        return selectRow(row);\n    });\n});\nfunction selectRow(row) {\n    if (activeRow) activeRow.classList.remove(\"active\");\n    row.classList.add(\"active\");\n    activeRow = row;\n}\n// #endregion\n// #region form to add new employee\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar fields = [\n    {\n        label: \"Name:\",\n        name: \"name\",\n        type: \"text\",\n        data: \"name\"\n    },\n    {\n        label: \"Position:\",\n        name: \"position\",\n        type: \"text\",\n        data: \"position\"\n    },\n    {\n        label: \"Age:\",\n        name: \"age\",\n        type: \"number\",\n        data: \"age\"\n    },\n    {\n        label: \"Salary:\",\n        name: \"salary\",\n        type: \"number\",\n        data: \"salary\"\n    }\n];\nvar selectField = {\n    label: \"Office:\",\n    name: \"office\",\n    options: [\n        {\n            value: \"tokyo\",\n            text: \"Tokyo\"\n        },\n        {\n            value: \"singapore\",\n            text: \"Singapore\"\n        },\n        {\n            value: \"london\",\n            text: \"London\"\n        },\n        {\n            value: \"new-York\",\n            text: \"New York\"\n        },\n        {\n            value: \"edinburgh\",\n            text: \"Edinburgh\"\n        },\n        {\n            value: \"san-Francisco\",\n            text: \"San Francisco\"\n        }\n    ],\n    data: \"office\"\n};\nfields.forEach(function(field, index) {\n    var label = document.createElement(\"label\");\n    label.textContent = field.label;\n    var input = document.createElement(\"input\");\n    input.type = field.type;\n    input.name = field.name;\n    input.setAttribute(\"data-qa\", field.data);\n    input.required = true;\n    label.appendChild(input);\n    form.appendChild(label);\n    if (index === 1) {\n        var selectLabel = document.createElement(\"label\");\n        var select = document.createElement(\"select\");\n        selectLabel.textContent = selectField.label;\n        select.name = selectField.name;\n        select.setAttribute(\"data-qa\", selectField.data);\n        // select.required = true;\n        selectField.options.forEach(function(optionData) {\n            var option = document.createElement(\"option\");\n            option.value = optionData.value;\n            option.textContent = optionData.text;\n            select.appendChild(option);\n        });\n        selectLabel.appendChild(select);\n        form.appendChild(selectLabel);\n    }\n});\nvar submitButton = document.createElement(\"button\");\nsubmitButton.type = \"submit\";\nsubmitButton.textContent = \"Save to table\";\nform.appendChild(submitButton);\ndocument.body.appendChild(form);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var formData = new FormData(form);\n    var data = {};\n    formData.forEach(function(value, key) {\n        data[key] = value;\n    });\n    if (validation(data)) {\n        addNewRow(data);\n        pushNotification(\"Success\", \"Row added successfully!\", \"success\");\n    }\n});\nfunction addNewRow(data) {\n    var tableBody = document.querySelector(\"tbody\");\n    var newRow = document.createElement(\"tr\");\n    for(var key in data)if (data.hasOwnProperty(key)) {\n        var newCell = document.createElement(\"td\");\n        newCell.textContent = capitalizeWords(data[key]);\n        if (key === \"position\") newCell.textContent = data[key];\n        if (key === \"salary\") {\n            var salary = parseFloat(data[key]);\n            newCell.textContent = \"$\".concat(salary.toLocaleString(\"en-US\"));\n        }\n        newRow.appendChild(newCell);\n    }\n    tableBody.appendChild(newRow);\n}\nfunction capitalizeWords(text) {\n    return text.toString().split(/[\\s-]+/).map(function(word) {\n        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    }).join(\" \");\n}\nfunction validation(info) {\n    if (!info.name || !info.position || !info.office || !info.age || !info.salary) {\n        pushNotification(\"Missing Fields\", \"All fields are required\", \"error\");\n        return false;\n    }\n    if (!info.name || info.name.trim().length < 4) {\n        pushNotification(\"Invalid Name\", \"Name must have at least 4 characters.\", \"error\");\n        return false;\n    }\n    if (!info.position || info.position.trim() === \"\") {\n        pushNotification(\"Invalid Position\", \"Position is required.\", \"error\");\n        return false;\n    }\n    if (!info.age || isNaN(info.age) || info.age < 18 || info.age > 90) {\n        pushNotification(\"Invalid Age\", \"You must be older than 17 and younger than 91.\", \"error\");\n        return false;\n    }\n    if (!info.salary || isNaN(info.salary) || info.salary <= 0) {\n        pushNotification(\"Invalid Salary\", \"Salary must be a positive number.\", \"error\");\n        return false;\n    }\n    return true;\n}\nvar pushNotification = function(title, description, type) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\", type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    var h2 = document.createElement(\"h2\");\n    h2.setAttribute(\"class\", \"title\");\n    h2.textContent = title;\n    var p = document.createElement(\"p\");\n    p.textContent = description;\n    notification.append(h2, p);\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 6000);\n}; // #endregion\n\n//# sourceMappingURL=index.07845634.js.map\n","'use strict';\n\n// #region sorting Table\nconst tableNames = document.querySelectorAll('thead th');\nlet lastSortedIndex = null;\nconst sortDirections = Array.from({ length: tableNames.length }, () => true);\n\ntableNames.forEach((element, index) => {\n  element.addEventListener('click', () => sortTable(index));\n});\n\nfunction sortTable(index) {\n  const tableBody = document.querySelector('tbody');\n  const headRows = Array.from(tableBody.querySelectorAll('tr'));\n\n  if (lastSortedIndex === index) {\n    sortDirections[index] = !sortDirections[index];\n  } else {\n    sortDirections[index] = true;\n  }\n\n  headRows.sort((rowA, rowB) => {\n    const cellA = rowA.cells[index].textContent.trim();\n    const cellB = rowB.cells[index].textContent.trim();\n\n    const direction = sortDirections[index] ? 1 : -1;\n\n    return compareValues(cellA, cellB, index) * direction;\n  });\n\n  tableBody.append(...headRows);\n  lastSortedIndex = index;\n}\n\nfunction compareValues(cellA, cellB, index) {\n  if (index <= 2) {\n    return cellA.localeCompare(cellB);\n  }\n\n  if (index === 4) {\n    const valueA = parseFloat(cellA.replace(/[$,]/g, '')) || 0;\n    const valueB = parseFloat(cellB.replace(/[$,]/g, '')) || 0;\n\n    return valueA - valueB;\n  }\n\n  return parseFloat(cellA) - parseFloat(cellB);\n}\n// #endregion\n\n// #region selected Row\nconst rows = document.querySelectorAll('tbody tr');\nlet activeRow = null;\n\nrows.forEach((row, index) => {\n  row.addEventListener('click', () => selectRow(row));\n});\n\nfunction selectRow(row) {\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n\n  row.classList.add('active');\n\n  activeRow = row;\n}\n// #endregion\n\n// #region form to add new employee\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst fields = [\n  {\n    label: 'Name:',\n    name: 'name',\n    type: 'text',\n    data: 'name',\n  },\n  {\n    label: 'Position:',\n    name: 'position',\n    type: 'text',\n    data: 'position',\n  },\n  {\n    label: 'Age:',\n    name: 'age',\n    type: 'number',\n    data: 'age',\n  },\n  {\n    label: 'Salary:',\n    name: 'salary',\n    type: 'number',\n    data: 'salary',\n  },\n];\n\nconst selectField = {\n  label: 'Office:',\n  name: 'office',\n  options: [\n    { value: 'tokyo', text: 'Tokyo' },\n    { value: 'singapore', text: 'Singapore' },\n    { value: 'london', text: 'London' },\n    { value: 'new-York', text: 'New York' },\n    { value: 'edinburgh', text: 'Edinburgh' },\n    { value: 'san-Francisco', text: 'San Francisco' },\n  ],\n  data: 'office',\n};\n\nfields.forEach((field, index) => {\n  const label = document.createElement('label');\n\n  label.textContent = field.label;\n\n  const input = document.createElement('input');\n\n  input.type = field.type;\n  input.name = field.name;\n  input.setAttribute('data-qa', field.data);\n  input.required = true;\n\n  label.appendChild(input);\n  form.appendChild(label);\n\n  if (index === 1) {\n    const selectLabel = document.createElement('label');\n    const select = document.createElement('select');\n\n    selectLabel.textContent = selectField.label;\n    select.name = selectField.name;\n    select.setAttribute('data-qa', selectField.data);\n    // select.required = true;\n\n    selectField.options.forEach((optionData) => {\n      const option = document.createElement('option');\n\n      option.value = optionData.value;\n      option.textContent = optionData.text;\n      select.appendChild(option);\n    });\n\n    selectLabel.appendChild(select);\n    form.appendChild(selectLabel);\n  }\n});\n\nconst submitButton = document.createElement('button');\n\nsubmitButton.type = 'submit';\nsubmitButton.textContent = 'Save to table';\nform.appendChild(submitButton);\n\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const data = {};\n\n  formData.forEach((value, key) => {\n    data[key] = value;\n  });\n\n  if (validation(data)) {\n    addNewRow(data);\n    pushNotification('Success', 'Row added successfully!', 'success');\n  }\n});\n\nfunction addNewRow(data) {\n  const tableBody = document.querySelector('tbody');\n  const newRow = document.createElement('tr');\n\n  for (const key in data) {\n    if (data.hasOwnProperty(key)) {\n      const newCell = document.createElement('td');\n\n      newCell.textContent = capitalizeWords(data[key]);\n\n      if (key === 'position') {\n        newCell.textContent = data[key];\n      }\n\n      if (key === 'salary') {\n        const salary = parseFloat(data[key]);\n\n        newCell.textContent = `$${salary.toLocaleString('en-US')}`;\n      }\n\n      newRow.appendChild(newCell);\n    }\n  }\n\n  tableBody.appendChild(newRow);\n}\n\nfunction capitalizeWords(text) {\n  return text\n    .toString()\n    .split(/[\\s-]+/)\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(' ');\n}\n\nfunction validation(info) {\n  if (\n    !info.name ||\n    !info.position ||\n    !info.office ||\n    !info.age ||\n    !info.salary\n  ) {\n    pushNotification('Missing Fields', 'All fields are required', 'error');\n\n    return false;\n  }\n\n  if (!info.name || info.name.trim().length < 4) {\n    pushNotification(\n      'Invalid Name',\n      'Name must have at least 4 characters.',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!info.position || info.position.trim() === '') {\n    pushNotification('Invalid Position', 'Position is required.', 'error');\n\n    return false;\n  }\n\n  if (!info.age || isNaN(info.age) || info.age < 18 || info.age > 90) {\n    pushNotification(\n      'Invalid Age',\n      'You must be older than 17 and younger than 91.',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!info.salary || isNaN(info.salary) || info.salary <= 0) {\n    pushNotification(\n      'Invalid Salary',\n      'Salary must be a positive number.',\n      'error',\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  const h2 = document.createElement('h2');\n\n  h2.setAttribute('class', 'title');\n  h2.textContent = title;\n\n  const p = document.createElement('p');\n\n  p.textContent = description;\n\n  notification.append(h2, p);\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 6000);\n};\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tableNames","document","querySelectorAll","lastSortedIndex","sortDirections","from","forEach","element","index","addEventListener","tableBody","headRows","querySelector","sort","rowA","rowB","cellA","cells","textContent","trim","cellB","direction","localeCompare","valueA","parseFloat","replace","append","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","rows","activeRow","row","classList","remove","add","form","createElement","selectField","label","options","value","text","data","fields","type","field","input","setAttribute","required","appendChild","selectLabel","select","optionData","option","submitButton","body","e","preventDefault","formData","FormData","key","info","position","office","age","salary","pushNotification","isNaN","addNewRow","newRow","hasOwnProperty","newCell","split","map","word","charAt","toUpperCase","toLowerCase","join","concat","toLocaleString","title","description","notification","h2","p","setTimeout"],"version":3,"file":"index.07845634.js.map"}